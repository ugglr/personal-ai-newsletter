import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { loadData } from "./api/trigger";
import { ReminderDto } from "./api/reminders";
import { PromptDto } from "./api/prompts";
import { NextPage } from "next";
import Card from "@/components/Card";
import { useState } from "react";
import Form from "@/components/Form";

type Props = {
  reminders: ReminderDto[];
  prompts: PromptDto[];
};
const Home: NextPage<Props> = (props) => {
  const [reminders, setReminders] = useState<ReminderDto[]>(props.reminders);
  const [prompts, setPrompts] = useState<PromptDto[]>(props.prompts);

  const refetchData = async (): Promise<void> => {
    const updatedReminders = (await loadData("reminders")) as ReminderDto[];
    setReminders(updatedReminders);
    const updatedPrompts = (await loadData("prompts")) as PromptDto[];
    setPrompts(updatedPrompts);
  };

  const onDelete = async (type: "reminders" | "prompts", id: string) => {
    try {
      await fetch(`${process.env.NEXT_PUBLIC_URL}/api/${type}/api/${type}`, {
        method: "DELETE",
        headers: {
          "Content-Type": "application/json",
          authorization: process.env.NEXT_PUBLIC_API_KEY as string,
        },
        body: JSON.stringify({ id }),
      });

      await refetchData();
    } catch (err) {
      console.log(err);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>Your newsletter</h1>

        <Form onDone={refetchData} />

        <section className={styles.section}>
          <h3 className={styles.sectionTitle}>Reminders</h3>
          {reminders.map(({ reminder, _id }) => (
            <Card
              key={_id}
              value={reminder}
              onDelete={async () => await onDelete("reminders", _id)}
            />
          ))}
        </section>

        <section className={styles.section}>
          <h3 className={styles.sectionTitle}>Prompts</h3>
          {prompts.map(({ prompt, _id }) => (
            <Card
              key={_id}
              value={prompt}
              onDelete={async () => await onDelete("prompts", _id)}
            />
          ))}
        </section>
      </main>
    </>
  );
};

export default Home;

export const getServerSideProps = async () => {
  const reminders = await loadData("reminders");
  const prompts = await loadData("prompts");

  return {
    props: {
      reminders,
      prompts,
    },
  };
};
